Source: libwandevent
Priority: extra
Maintainer: Brendon Jones <brendonj@waikato.ac.nz>
Build-Depends: debhelper (>= 7.0.50~), autotools-dev, automake, libtool
Standards-Version: 3.8.4
Section: libs
Homepage: http://research.wand.net.nz/software/libwandevent.php
#Vcs-Git: git://git.debian.org/collab-maint/libwandevent.git
#Vcs-Browser: http://git.debian.org/?p=collab-maint/libwandevent.git;a=summary

Package: libwandevent-dev
Section: libdevel
Architecture: any
Depends: libwandevent (= ${binary:Version})
Description: C API for writing event driven programs (development version).
 Libwandevent is a software library written in C that provides an API for
 developing event-driven programs. Libwandevent is intended for the development
 of programs that may have a number of 'events' that can occur at any given
 point in the program's execution which need to be handled as soon as possible
 without blocking or waiting on other inactive events.
 .
 The idea behind the design of libwandevent is that the developer will register
 events and provide libwandevent with a function that is to be called should
 that event occur. All of the code for managing the events and determining
 whether an event has occurred is contained within libwandevent, leaving the
 developer free to concentrate on the events themselves rather than having to
 check for the occurrence of the event.
 .
 This package provides the development files (i.e. includes, static libraries)
 that allow you to build software which that uses libwandevent.

Package: libwandevent
Section: libs
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: C API for writing event driven programs.
 Libwandevent is a software library written in C that provides an API for
 developing event-driven programs. Libwandevent is intended for the development
 of programs that may have a number of 'events' that can occur at any given
 point in the program's execution which need to be handled as soon as possible
 without blocking or waiting on other inactive events.
 .
 The idea behind the design of libwandevent is that the developer will register
 events and provide libwandevent with a function that is to be called should
 that event occur. All of the code for managing the events and determining
 whether an event has occurred is contained within libwandevent, leaving the
 developer free to concentrate on the events themselves rather than having to
 check for the occurrence of the event.
